on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

name: Tests
jobs:
  entry_point_test:
    name: Entry Point Test - Python ${{ matrix.python_version }} - Featuretools ${{ matrix.featuretools_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.6", "3.7", "3.8"]
        featuretools_version: ["Release", "Main"]
    steps:
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Configure pip
        run: |
          pip config --site set global.progress_bar off
          pip install pip --upgrade
          pip install wheel
      - name: Install requirements
        run: |
          pip install .
      - if: ${{ matrix.featuretools_version == 'Main' }}
        name: Install latest version of Featuretools from main branch
        run: pip install git+https://github.com/alteryx/featuretools.git@main#egg=featuretools --force-reinstall
      - name: Verify installed packages have compatible dependencies
        run: pip check
      - name: Test entry point
        run: python -c "from featuretools import tsfresh"

  lint_tests:
    name: Lint Tests - Python ${{ matrix.python_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.6", "3.7", "3.8"]
    steps:
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Configure pip
        run: |
          pip config --site set global.progress_bar off
          pip install pip --upgrade
          pip install wheel
      - name: Install requirements
        run: |
          pip install .
          pip install -r test-requirements.txt
      - name: Run lint tests
        run: make lint-tests

  unit_tests:
    name: Unit Tests - Python ${{ matrix.python_version }} - Featuretools ${{ matrix.featuretools_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.6", "3.7", "3.8"]
        featuretools_version: ["Release", "Main"]
    steps:
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Configure pip
        run: |
          pip config --site set global.progress_bar off
          pip install pip --upgrade
          pip install wheel
      - name: Install requirements
        run: |
          pip install .
          pip install -r test-requirements.txt
      - if: ${{ matrix.featuretools_version == 'Main' }}
        name: Install latest version of Featuretools from main branch
        run: pip install git+https://github.com/alteryx/featuretools.git@main#egg=featuretools --force-reinstall
      - if: ${{ matrix.python_version != 3.8 || matrix.featuretools_version != 'Main' }}
        name: Run unit tests (no code coverage)
        run: make unit-tests
      - if: ${{ matrix.python_version == 3.8 && matrix.featuretools_version == 'Main' }}
        name: Run unit tests with code coverage
        run: make unit-tests ADDOPTS="--cov=featuretools_tsfresh_primitives"
      - if: ${{ matrix.python_version == 3.8 && matrix.featuretools_version == 'Main' }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
